/*_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/ */
*GENERATION OF CASES AND CONTROLS;
*pijv : rate of outcome occurrence per day when ex =I and z=j (ex:exposure, z: time-varying confounder)
     When no time-varying confounder exists use pi0v as a rate when ex=i ;
*fkv: proportion of time-varying confounder when unexposed (k=0) and when exposed (k=1)
     When no time-varying confounder exists give 0 to f0v and f1v;
*Nnonc: Number of subjects included in 20 of each Group who start a drug each day and are not censored 
 when exposure ends. If no subject is  censored, give 20;
*Nite: number of iterations;
*dataset01: without time-varying confounder, RR=4, no censoring at the end of the exposure;
*dataset02: without time-varying confounder, RR=4, 30% censoring at the end of the exposure;
*dataset03: without time-varying confounder, RR=1, no censoring at the end of the exposure;
*dataset04: without time-varying confounder, RR=1, 30% censoring at the end of the exposure;
*dataset05: with time-varying confounder, RR=4, RRz=2, no censoring at the end of the exposure;
*dataset06: with time-varying confounder, RR=4, RRz=2, 30% censoring at the end of the exposure;
*dataset07: with time-varying confounder, RR=1, RRz=2, no censoring at the end of the exposure;
*dataset08: with time-varying confounder, RR=1, RRz=2, 30% censoring at the end of the exposure;
/*_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/ */
option nonotes;
%macro itrtn(p00v, p10v, p01v, p11v, f0v, f1v, Nnonc, Nite);
%DO ite=1 %to &Nite;
data ddays;
ite=&ite;
p00=&p00v; p10=&p10v; p01=&p01v; p11=&p11v; f0=&f0v; f1=&f1v;
put"ite=&ite";
data ddays; set ddays;
%let k=%eval(43210+&ite);
call streaminit(&k);
*day_first is the day when each subject starts a drug;
*a subject in Group C with day_first=-238 has the earliest day_first who can become a control 
  with discordant exposure pattern at day1;
*when outcome occurs y=1, otherwise y=0;
DO day_first=-238 to 200;

%macro ThreeG(GroupN,Nexposed);
*&Nnonc subjects are NOT censored when exposure ends at 60th day after starting a drug;
Do Pt_ID=60*(day_first+238)+(&GroupN-1)*20+1 to 60*(day_first+238)+(&GroupN-1)*20+&Nnonc;
*Before starting a drug, ex(exposure)=0, y=0 and Prob(z(time-varying confounder)=1) is f0
 and e=0 indicates that a subject cannot be a control with discordant exposure pattern;
do i=-59 to 0;
day=day_first+i-1;
y=0; ex=0; cens=0; e=0;
%if &f0v>0 or &f1v>0 %then %do;
z=rand("Bernoull", f0); %end;
output; end;
*While exposed, e=1 indicating a subject can be a case or time-control with discordant exposure pattern;
do i=1 to &Nexposed;
day=day_first+i-1;
ex=1; cens=0;
if i<=60 then e=1;
else e=0;
%if &f0v=0 and &f1v=0 %then %do;
y=rand("Bernoull", p10);%end;
%else %do;
z=rand("Bernoull", f1);
y=rand("Bernoull", ifn(z=1, p11, p10)); %end;
output; end;
*During 60 days after exposure ends, e=1 indicating a subject can be a control with discordant exposure pattern;
do i=&Nexposed+1 to &Nexposed+60;
day=day_first+i-1;
ex=0; cens=0; e=1;
%if &f0v=0 and &f1v=0 %then %do;
y=rand("Bernoull", p00);%end;
%else %do;
z=rand("Bernoull", f0);
y=rand("Bernoull", ifn(z=1, p01, p00));%end;
output; end;
End;
*(20-&Nnonc) subjects are censored when exposure ends at 60th day after starting a drug;
Do Pt_ID=60*(day_first+238)+&Nnonc+(&GroupN-1)*20+1 to 60*(day_first+238)+(&GroupN-1)*20+20;
*Before and during drug exposure the process is the same as that for &Nnonc patients;
do i=-59 to 0;
y=0; ex=0; cens=1; e=0;
day=day_first+i-1;
%if &f0v>0 or &f1v>0 %then %do;
z=rand("Bernoull", f0);%end;
output; end;
do i=1 to &Nexposed;
day=day_first+i-1;
ex=1; cens=1; 
if i<=60 then e=1;
else e=0;
%if &f0v=0 and &f1v=0 %then %do;
y=rand("Bernoull", p10);%end;
%else %do;
z=rand("Bernoull", f1);
y=rand("Bernoull", ifn(z=1, p11, p10));%end;
output; end;
End;
%mend ThreeG;
%ThreeG(1,60); %ThreeG(2,120); %ThreeG(3,180);
END;
*F=1 on the day of the first outcome occurrence and thereafter;
data ddays; set ddays; by Pt_id; retain F;
if first.Pt_id then do; F=0;end;
if y=1 then F=1;
*dcase includes those who had the outcome at day_case; 
data dcase; set ddays; if F=1 ;
data dcase; set dcase; by Pt_ID; if first.Pt_ID;
data dcase(keep=ite Pt_ID day_case day_first e); set dcase; day_case=day; 
*cases are those who had an outcome between day 1 and day 200 and eligible as a case
 with discordant exposure pattern (those who had an outcome in the first 60 days of the
 exposure period or in the 60-day post exposure period);
data dcase; set dcase; if day_case>=1 and day_case<=200 and e=1;
proc sort data=dcase; by day_case;
*dcontrol_candidates includes those who can become a time-control between day1 and day200 while e=1;
data dcontrol_cand; set ddays; if F=0 and e=1 and day>=1 and day<=200;
proc sort data=dcontrol_cand; by ite Pt_id;
proc sort data=dcontrol_cand out=dc_cand_ID nodupkey ; by ite Pt_Id;
data dc_cand_ID(keep=ite Pt_Id); set dc_cand_ID;
data dc_cand0 dc_cand1; set dcontrol_cand; if ex=0 then output dc_cand0; else output dc_cand1;
data dc_cand1; set dc_cand1; by ite Pt_id; retain day_first1;
if first.Pt_id then day_first1=day;
if last.Pt_id then do; day_last1=day; output; end;
data dc_cand0; set dc_cand0; by ite Pt_id; retain day_first0;
if first.Pt_id then day_first0=day;
if last.Pt_id then do; day_last0=day; output; end;
data dc_cand1(keep=ite Pt_id day_first1 day_last1); set dc_cand1;
data dc_cand0(keep=ite Pt_id day_first0 day_last0); set dc_cand0;
data dcontrol_candidates; merge dc_cand_ID (in=ina) dc_cand1 dc_cand0; by ite Pt_id; if ina=1;
data dcontrol_candidates; set dcontrol_candidates;
if day_first1=. then day_first1=0; 
if day_last1=. then day_last1=0;
if day_first0=. then day_first0=0;
if day_last0=. then day_last0=0;
data _null_; set dcase nobs=obs end=EOF;
if EOF then call symput("n_obs", obs);
run;
%macro select_control();
%do i=1 %to &n_obs;
*dcase_i is one case selected from cases in turn;
data dcase_i(keep=ite case_id day_case); set dcase; if _n_=&i; case_id=Pt_id;
*dcontrol_c_i includes candidates of controls for each case who are at risk, the same subject can be selected twice or more;
data dcontrol_c_i; merge dcontrol_candidates(in=ina) dcase_i(in=inb); by ite; if ina=1 and inb=1;
data dcontrol_c_i; set dcontrol_c_i; 
if (day_case>=day_first1 and day_case<=day_last1) or (day_case>=day_first0 and day_case<=day_last0);
*one control is selected for each case;
data dcontrol_c_i; set dcontrol_c_i; 
%let kk=%eval(6543210+&ite*1000+&i);
call streaminit(&kk);
x=rand("unifor");
proc sort data= dcontrol_c_i; by x;
data dcontrol_i; set dcontrol_c_i; if _n_=1;
data dcontrol_i(keep=ite Pt_ID day_case case_id); set dcontrol_i;
*dcontrol is the list of controls for the same number of cases;
%if &i=1 %then %do; data dcontrol; set dcontrol_i; %end;
%else %do; data dcontrol; set dcontrol dcontrol_i; %end;
%end;

data dcase; set dcase; case=1;
data dcontrol; set dcontrol; case=0;
run;
%mend select_control;
%select_control();

%macro pattern();
*extract status of exposure (and confunder) in 61 days (day_case and preceding 60days)
  for cases and controls. One subject can be a case and a control and to make the
  process easy to understand, the same process is repeated for cases and controls;
data dcase2(keep=ite Pt_ID day_case case); set dcase;
proc sort data=dcase2; by Pt_ID;
data dcase2; merge dcase2 (in=ina) ddays(in=inb); by Pt_ID; if ina=1 and inb=1;
*dcase2 has 61 records for 60 days before day_case and 1 day at day_case;
data dcase2; set dcase2; if day>=day_case-60 and day<=day_case;
*dayCXO=0 for the day of outcome occurrence, dayCXO=1 for one day before the outcome occurrence,
dayCXO=2 for two days before the outcome occurrence, -- dayCXO=60 for 60 days before the outcome occurrence;
%if &f0v=0 and &f1v=0 %then %do;
data dcase2(keep=ite Pt_id case dayCXO ex day day_case); %end;
%else %do;
data dcase2(keep=ite Pt_id case dayCXO z ex day day_case); %end;
set dcase2; dayCXO=day_case-day;
%do ii=0 %to 60;
data dcase3; set dcase2; if dayCXO=&ii;
%if &f0v=0 and &f1v=0 %then %do;
data dcase3(rename=(ex=c&ii)); set dcase3;%end;
%else %do;
data dcase3(rename=(ex=c&ii z=z&ii)); set dcase3;%end;
*dcase4 has one record for one case with status of exposure (and confounder) for 61 days;
%if &ii=0 %then %do; data dcase4; set dcase3; %end;
%else %do; data dcase4; merge dcase4(in=ina) dcase3(in=inb); by Pt_ID; if ina=1 and inb=1;%end;
%end;
data dcontrol2(keep=ite Pt_ID day_case case case_id); set dcontrol;
proc sort data=dcontrol2; by Pt_ID case_id;
proc sql;
create table dcontrol3 as
%if &f0v=0 and &f1v=0 %then %do;
select dcontrol2.Pt_id, dcontrol2.ite, dcontrol2.case_id, dcontrol2.day_case, dcontrol2.case, ddays.day, ddays.ex
%end;
%else %do;
select dcontrol2.Pt_id, dcontrol2.ite, dcontrol2.case_id, dcontrol2.day_case, dcontrol2.case, ddays.day, ddays.ex, ddays.z
%end;
from dcontrol2 inner join ddays on dcontrol2.Pt_id=ddays.Pt_id;
quit;
proc sort data=dcontrol3; by Pt_ID case_id;
*dcontrol4 has 61 records for each control;
data dcontrol4; set dcontrol3; if day>=day_case-60 and day<=day_case;
%if &f0v=0 and &f1v=0 %then %do;
data dcontrol4(keep=ite Pt_id case dayCXO ex day day_case case_id); %end;
%else  %do;
data dcontrol4(keep=ite Pt_id case dayCXO z ex day day_case case_id); %end;
set dcontrol4; dayCXO=day_case-day;
%do ii=0 %to 60;
data dcontrol5; set dcontrol4; if dayCXO=&ii;
%if &f0v=0 and &f1v=0 %then %do;
data dcontrol5(rename=(ex=c&ii)); %end;
%else %do;
data dcontrol5(rename=(ex=c&ii z=z&ii)); %end;
set dcontrol5;
*dcontrol6 has one record for one control with status of exposure (and confounder) for 61 days;
%if &ii=0 %then %do; data dcontrol6; set dcontrol5; %end;
%else %do; data dcontrol6; merge dcontrol5(in=ina) dcontrol6(in=inb); by ite Pt_ID case_id; if ina=1 and inb=1;%end;
%end;
data dpattern_ite; set dcase4 dcontrol6;
data dpattern_ite(drop=dayCXO day case_id); set dpattern_ite;
proc sort data=dpattern_ite; by day_case;
%mend pattern;
%pattern();
%if &ite=1 %then %do; data dpattern; set dpattern_ite; %end;
%else %do; data dpattern; set dpattern dpattern_ite; %end; 
%END;
%mend itrtn;
%itrtn(0.00005, 0.0002, 0, 0, 0, 0, 20, 1000);
data dataset01; set dpattern;
%itrtn(0.00005, 0.0002, 0, 0, 0, 0, 14, 1000);
data  dataset02;set dpattern;
%itrtn(0.00005, 0.00005, 0, 0, 0, 0, 20,  1000);
data  dataset03; set dpattern;
%itrtn(0.00005, 0.00005, 0, 0, 0, 0, 14,  1000);
data  dataset04; set dpattern;
%itrtn(0.00005, 0.0002, 0.0001, 0.0004, 0.2, 0.4, 20,  1000);
data  dataset05; set dpattern;
%itrtn(0.00005, 0.0002, 0.0001, 0.0004, 0.2, 0.4, 14,  1000);
data  dataset06; set dpattern;
%itrtn(0.00005, 0.00005, 0.0001, 0.0001, 0.2, 0.4, 20,  1000);
data  dataset07; set dpattern;
%itrtn(0.00005, 0.00005, 0.0001, 0.0001, 0.2, 0.4, 14,  1000);
data  dataset08; set dpattern;
run;




/*_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/ */;
*ESTIMATION OF PARAMETERS FOR STANDARD CONDITIONAL LOGISTIC 
  REGRESSION (OR_SCL), MANTEL-HAENSZEL METHOD (OR_MH), 
   AND WEIGHTING METHOD (OR_G);
*A variable '&subject' is specified as follows:
 "Ncase": no confounder, cases only (case-crossover),
"Ncontrol": no confounder, controls only,
"Nctc": no confounder, case-time-control,
"Ycase": with confounder, cases only(case-crossover),
"Ycontrol": with confounder, controls only,
"Yctc": with confounder, case-time-control;
*&DatasetN is XX for datasetXX (XX=01, 02, ---, 08) ;
/*_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/ */
option nonotes;
%macro CXO(subject, DatasetN);
data dataset; set dataset&DatasetN;
%if &subject= "Ncase" or &subject= "Ycase" %then %do;
*in dataset, case=1 for cases and case=0 for controls;
data dc(drop=case); set dataset; if case=1 then output; %end;
%if &subject = "Ncontrol" or &subject = "Ycontrol" %then %do;
data dc(drop=case); set dataset; if case=0 then output;
*of tc patients, one patient can be selected as a tc twice or more. newid is given to each record;
data dc(rename=(Pt_ID=Pt_IDOriginal)); set dc;
proc sort data=dc; by ite;
data dc; set dc; by ite; retain Pt_ID;
if first.ite then Pt_ID=0; Pt_ID=Pt_ID+1;
%end;
%if &subject = "Nctc" or &subject = "Yctc" %then %do;
data dc(drop=case); set dataset; if case=1 then d=1; else d=0; 
*in case-time-control, one patient can be a case and a control. newid is given to each record;
data dc(rename=(Pt_ID=Pt_IDOriginal)); set dc;
proc sort data=dc; by ite;
data dc; set dc; by ite; retain Pt_ID;
if first.ite then Pt_ID=0; Pt_ID=Pt_ID+1;
%end;
* estimate OR_SCL (OR by standard conditional logistic
regression) M: number of control periods;

%macro SCL(N, M);
* dperiod: 1 record is 1 period;
data dperiods; set dc;
%if &subject= "Nctc" %then %do;
*in dperiods, case=1 for case period and case=0 for control period;
case=1; ex_tc=IFN(c0=1,1,0); ex=d*ex_tc; output; %end;
%if &subject = "Ncase" or &subject = "Ncontrol" %then %do;
case=1; ex=IFN(c0=1,1,0);output; %end;
%if &subject= "Yctc" %then %do; 
case=1; ex_tc=IFN(c0=1,1,0); ex=d*ex_tc;z_tc=IFN(z0=1, 1, 0);z=d*z_tc; output; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
case=1; ex=IFN(c0=1,1,0);z=IFN(z0=1, 1, 0);output; %end;
%do j=1 %to &M;
%let jj=%eval(60/&M*&j);
%if &subject= "Nctc" %then %do;
case=0; ex_tc=IFN(c&jj=1,1,0); ex=d*ex_tc; output; %end;
%if &subject = "Ncase" or &subject = "Ncontrol" %then %do;
case=0; ex=IFN(c&jj=1,1,0); output;%end;
%if &subject= "Yctc" %then %do; 
case=0; ex_tc=IFN(c&jj=1,1,0); ex=d*ex_tc; z_tc=IFN(z&jj=1, 1, 0);z=d*z_tc;  output; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
case=0; ex=IFN(c&jj=1,1,0); z=IFN(z&jj=1, 1, 0);  output;%end;
%end;
data dperiods;set dperiods; time=2-case;
proc phreg data=dperiods outest=OR_SCL0 covout noprint; by ite;
%if &subject= "Nctc" %then %do;
model time*case(0)=ex ex_tc; %end;
%if &subject = "Ncase" or &subject = "Ncontrol"  %then %do;
model time*case(0)=ex; %end;
%if &subject= "Yctc" %then %do; 
model time*case(0)=ex ex_tc z z_tc; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
model time*case(0)=ex z; %end;
strata Pt_ID;
data OR_SCL0; set OR_SCL0; if _type_="PARMS";
data OR_SCL0; set OR_SCL0; length variable $ 8;
%if &subject= "Nctc" %then %do;
variable="ex"; LOR=ex; output; 
variable="ex_tc"; LOR=ex_tc; output;%end;
%if &subject = "Ncase" or &subject = "Ncontrol"  %then %do;
variable="ex"; LOR=ex; %end;
%if &subject= "Yctc" %then %do; 
variable="ex"; LOR=ex;  output; 
variable="ex_tc"; LOR=ex_tc; output; 
variable="z"; LOR=z; output; 
variable="z_tc"; LOR=z_tc; output; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
variable="ex"; LOR=ex; output; 
variable="z"; LOR=z; output;%end;
data OR_SCL0(keep=M variable LOR); set OR_SCL0; M=&M;
%if &N=1 %then %do; data OR_SCL; set OR_SCL0; %end;
%else %do; data OR_SCL; set OR_SCL OR_SCL0; %end;
%mend SCL;
%SCL(1, 1);%SCL(2, 2);%SCL(3, 3);%SCL(4, 4);%SCL(5, 5);%SCL(6, 6);
%SCL(7, 10);%SCL(8, 12);%SCL(9, 15);%SCL(10, 20);%SCL(11, 30);%SCL(12, 60);
proc means data=OR_SCL  noprint;
class M variable; var LOR ; output out=CXO_SCL mean=LORM std=LORstd;
data CXO_SCL; set CXO_SCL; if M^=. and variable^="";
data CXO_SCL(keep=M variable OR_SCL OR_SCL_L OR_SCL_U); set CXO_SCL; 
OR_SCL=exp(LORM); OR_SCL_L=exp(LORM-1.96*LORstd); OR_SCL_U=exp(LORM+1.96*LORstd);

* estimate OR_MH (OR by the Mantel-Haenszel method)
 M: number of control periods;
%macro MH(N, M);
* dperiod: 1 record is 1 period;
data dperiods; set dc;
%if &subject = "Nctc" or &subject = "Yctc" %then %do;
proc sort data=dperiods; by ite pt_id d;%end;
%else %do;
proc sort data=dperiods; by ite pt_id ;%end;
data dperiods; set dperiods;
%if &subject = "Nctc" or &subject = "Ncase" or &subject = "Ncontrol" %then %do;
case=1; ex=IFN(c0=1,1,0);output;
%do j=1 %to &M;
%let jj=%eval(60/&M*&j);
case=0; ex=IFN(c&jj=1,1,0); output;%end;
%end;
%if &subject = "Yctc" or &subject = "Ycase" or &subject = "Ycontrol" %then %do;
case=1; ex=IFN(c0=1,1,0); z=IFN(z0=1,1,0); output;
%do j=1 %to &M;
%let jj=%eval(60/&M*&j);
case=0; ex=IFN(c&jj=1,1,0);z=IFN(z&jj=1,1,0);  output;%end;
%end;
*select case period;
%if &subject = "Yctc" or &subject = "Ycase" or &subject = "Ycontrol" %then %do;
data dcase_p(keep=ite Pt_id c0 z0 case); set dperiods; if case=1;
*select case period where z=0;
data dcase_pz0; set dcase_p; if z0=0;
*select case period where z=1;
data dcase_pz1; set dcase_p; if z0=1;
proc sort data=dperiods; by ite Pt_id;
proc sort data=dcase_pz0; by ite Pt_id;
proc sort data=dcase_pz1; by ite Pt_id;
*select periods of z=0 for subjects with case period of z=0;
data dperiods_z0; merge dperiods (in=ina) dcase_pz0 (in=inb); by ite Pt_id; if ina=1 and inb=1;
data dperiods_z0; set dperiods_z0; if z=0;
*select periods of z=1 for subjects with case period of z=1;
data dperiods_z1; merge dperiods (in=ina) dcase_pz1 (in=inb); by ite Pt_id; if ina=1 and inb=1;
data dperiods_z1; set dperiods_z1; if z=1;
*OR for exposure stratified by z;
data dperiods; set dperiods_z0 dperiods_z1;%end;
%if &subject = "Yctc" %then %do;
proc sort data=dperiods; by ite Pt_id d; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
proc sort data=dperiods; by ite Pt_id; %end;
*Mantel-Haenszel method;
%if &subject = "Nctc" or &subject = "Yctc" %then %do; 
*dperiods1/dperiods0 are periods of cases/controls;
data dperiods1 dperiods0; set dperiods; if d=1 then output dperiods1; else output dperiods0;
proc freq data=dperiods0 noprint; tables Pt_ID*case*ex / cmh;
output mhor out=OR_MH0; by ite;
data OR_MH0(keep=ite LOR0); set OR_MH0; LOR0=log(_MHOR_);
proc freq data=dperiods1 noprint; tables Pt_ID*case*ex / cmh;
output mhor out=OR_MH1; by ite;
data OR_MH1(keep=ite LOR1); set OR_MH1; LOR1=log(_MHOR_);
data OR_MH; merge OR_MH1(in=ina) OR_MH0(in=inb); by ite; if ina=1 and inb=1;
data OR_MH(keep=LOR);set OR_MH; LOR=LOR1-LOR0;%end;
%if &subject = "Ncase" or &subject = "Ycase" or &subject = "Ncontrol" or &subject = "Ycontrol" %then %do; 
proc freq data=dperiods noprint; tables Pt_ID*case*ex / cmh;
output mhor out=OR_MH; by ite;
data OR_MH(keep=LOR); set OR_MH; LOR=log(_MHOR_);%end;
proc means data=OR_MH noprint;
var LOR ; output out=CXO_MH0 mean=LORM std=LORstd;
data CXO_MH0(keep=M variable OR_MH OR_MH_L OR_MH_U); set CXO_MH0; length variable $ 8;
M=&M; variable= "ex"; OR_MH=exp(LORM); OR_MH_L=exp(LORM-1.96*LORstd); OR_MH_U=exp(LORM+1.96*LORstd);
%if &N=1 %then %do; data CXO_MH; set CXO_MH0; %end;
%else %do; data CXO_MH; set CXO_MH CXO_MH0;  %end;
%mend MH;
%MH(1, 1);%MH(2, 2);%MH(3, 3);%MH(4, 4);%MH(5, 5);%MH(6, 6);
%MH(7, 10);%MH(8, 12);%MH(9, 15);%MH(10, 20);%MH(11, 30);%MH(12, 60);
* estimate OR_G (OR by weighting method)
 M: number of control periods;
%macro GL(N, M);
*find concordant exposure pattern;
data dc_g; set dc; 
proc sort data=dc_g; by ite Pt_ID;
data dc_g; set dc_g; by ite Pt_ID; retain discordant N1;
if first.PT_ID then do; discordant=0; N1=0; end;
%do j=1 %to &M; 
%let jj=%eval(60/&M*&j);
discordant=discordant+ifn(c0=c&jj,0,1);
N1=N1+c&jj;
%end;
*delete concordant pattern;
data dc_g; set dc_g; if discordant>0;
data dc_g; set dc_g;
PT10=IFN(c0=1, &M-N1,0);
PT01=IFN(c0=0, N1, 0);
PT1CXO=N1+c0;
PT0CXO=&M-N1+(1-c0);
*estimate of pi10 and pi00;
data dpi; set dc_g; by ite; retain a0 a1 PT10m PT01m;
if first.ite then do; a0=0; a1=0; PT01m=0; PT10m=0; end;
PT01m=PT01m+PT01;
PT10m=PT10m+PT10;
a1=a1+c0;
a0=a0+(1-c0);
data dpi; set dpi; by ite;
if last.ite then output;
data dpi(keep=ite pi00 pi10); set dpi;
*pi00 is pi0/pi0 and pi10=pi1/pi0 where pi1/pi0 is
the probability that case period is exposed/unexposed;
PT10m=PT10m/a1;
PT01m=PT01m/a0;
pi00=1; pi10=PT01m/PT10m;
data dc_g; merge dc_g(in=ina) dpi(in=inb); by ite; if ina=1 and inb=1;
data dperiods; set dc_g;
w0=pi00/PT0CXO; 
w1=pi10/PT1CXO;
* dperiod: 1 record is 1 period;
data dperiods; set dperiods;
%if &subject= "Nctc" %then %do;
case=1;  ex_tc=IFN(c0=1,1,0); ex=d*ex_tc; wt=IFN(c0=1, w1, w0);output; %end;
%if &subject = "Ncase" or &subject= "Ncontrol" %then %do;
case=1; ex=IFN(c0=1,1,0); wt=IFN(c0=1, w1, w0);output;%end;
%if &subject= "Yctc" %then %do; 
case=1;  ex_tc=IFN(c0=1,1,0); ex=d*ex_tc;z_tc=IFN(z0=1, 1, 0); z=d*z_tc; wt=IFN(c0=1, w1, w0);output; %end;
%if &subject = "Ycase" or &subject= "Ycontrol" %then %do;
case=1; ex=IFN(c0=1,1,0); z=IFN(z0=1,1,0); wt=IFN(c0=1, w1, w0);output;%end;
%do j=1 %to &M;
%let jj=%eval(60/&M*&j);
%if &subject= "Nctc" %then %do;
case=0; ex_tc=IFN(c&jj=1,1,0); ex=d*ex_tc; wt=IFN(c&jj=1, w1, w0); output; %end;
%if &subject = "Ncase" or &subject= "Ncontrol"  %then %do;
case=0; ex=IFN(c&jj=1,1,0);wt=IFN(c&jj=1, w1, w0); output;%end;
%if &subject= "Yctc" %then %do; 
case=0; ex_tc=IFN(c&jj=1,1,0); ex=d*ex_tc; z_tc=IFN(z&jj=1, 1, 0); z=d*z_tc; wt=IFN(c&jj=1, w1, w0); output; %end;
%if &subject = "Ycase" or &subject= "Ycontrol"  %then %do;
case=0; ex=IFN(c&jj=1,1,0);z=IFN(z&jj=1,1,0);wt=IFN(c&jj=1, w1, w0); output;%end;
%end;
%if &subject= "Nctc" %then %do;
data dperiods(keep=ite Pt_ID  case ex ex_tc lw); set dperiods;%end;
%if &subject = "Ncase" or &subject= "Ncontrol"  %then %do;
data dperiods(keep=ite Pt_ID case ex lw); set dperiods;%end;
%if &subject= "Yctc" %then %do; 
data dperiods(keep=ite Pt_ID  case ex ex_tc z z_tc lw); set dperiods;%end;
%if &subject = "Ycase" or &subject= "Ycontrol"  %then %do;
data dperiods(keep=ite Pt_ID case ex z lw); set dperiods;%end;
lw=log(wt);
*OR_G;
data dperiods;set dperiods; time=2-case;
proc phreg data=dperiods outest=OR_G0 covout noprint; by ite;
%if &subject= "Nctc" %then %do;
model time*case(0)=ex ex_tc/ offset=lw; %end;
%if &subject = "Ncase" or &subject = "Ncontrol"  %then %do;
model time*case(0)=ex/ offset=lw; %end;
%if &subject= "Yctc" %then %do; 
model time*case(0)=ex ex_tc z z_tc/ offset=lw; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
model time*case(0)=ex z/ offset=lw; %end;
strata Pt_ID;
data OR_G0; set OR_G0; if _type_="PARMS";
data OR_G0; set OR_G0; length variable $ 8;
%if &subject= "Nctc" %then %do;
variable="ex"; LOR=ex; output; 
variable="ex_tc"; LOR=ex_tc; output;%end;
%if &subject = "Ncase" or &subject = "Ncontrol"  %then %do;
variable="ex"; LOR=ex; %end;
%if &subject= "Yctc" %then %do; 
variable="ex"; LOR=ex;  output; 
variable="ex_tc"; LOR=ex_tc; output; 
variable="z"; LOR=z; output; 
variable="z_tc"; LOR=z_tc; output; %end;
%if &subject = "Ycase" or &subject = "Ycontrol" %then %do;
variable="ex"; LOR=ex; output; 
variable="z"; LOR=z; output;%end;
data OR_G0(keep=M variable LOR); set OR_G0; M=&M;
%if &N=1 %then %do; data OR_G; set OR_G0; %end;
%else %do; data OR_G; set OR_G OR_G0; %end;
%mend GL;
%GL(1, 1);%GL(2, 2);%GL(3, 3);%GL(4, 4);%GL(5, 5);%GL(6, 6);
%GL(7, 10);%GL(8, 12);%GL(9, 15);%GL(10, 20);%GL(11, 30);%GL(12, 60);
proc means data= OR_G noprint;
class M variable; var LOR ; output out=CXO_G mean=LORM std=LORstd;
data CXO_G; set CXO_G; if M^=. and variable^="";
data CXO_G(keep=M variable OR_G OR_G_L OR_G_U); set CXO_G; 
OR_G=exp(LORM); OR_G_L=exp(LORM-1.96*LORstd); OR_G_U=exp(LORM+1.96*LORstd);
data CXO_merge; merge CXO_SCL (in=ina) CXO_MH (in=inb) CXO_G (in=inc) ; by M variable; if ina=1;
%if &subject= "Ncase" or &subject= "Ycase" %then %do; data CXO_Case&DatasetN; set CXO_merge;%end;
%if &subject= "Ncontrol" or &subject= "Ycontrol" %then %do; data CXO_tc&DatasetN; set CXO_merge;%end;
%if &subject= "Nctc" or &subject= "Yctc" %then %do; data CXO_ctc&DatasetN; set CXO_merge; %end;
%mend CXO;
%CXO("Ncase", 01);%CXO("Ncontrol", 01);%CXO("Nctc", 01);
%CXO("Ncase", 02);%CXO("Ncontrol", 02);%CXO("Nctc", 02);
%CXO("Ncase", 03);%CXO("Ncontrol", 03);%CXO("Nctc", 03);
%CXO("Ncase", 04);%CXO("Ncontrol", 04);%CXO("Nctc", 04);
%CXO("Ycase", 05);%CXO("Ycontrol", 05);%CXO("Yctc", 05); 
%CXO("Ycase", 06);%CXO("Ycontrol", 06);%CXO("Yctc", 06);
%CXO("Ycase", 07);%CXO("Ycontrol", 07);%CXO("Yctc", 07);
%CXO("Ycase", 08);%CXO("Ycontrol", 08);%CXO("Yctc", 08);
run;












